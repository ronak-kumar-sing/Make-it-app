import { Ionicons } from '@expo/vector-icons';
import { useEffect, useState } from 'react';
import { Linking, Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native';
import * as NotificationService from '../services/NotificationService';

const NotificationPermissionDialog = ({ visible, onClose, theme }) => {
  const [permissionStatus, setPermissionStatus] = useState('undetermined');

  useEffect(() => {
    if (visible) {
      checkPermissionStatus();
    }
  }, [visible]);

  const checkPermissionStatus = async () => {
    // First check if notifications are available on this device
    const available = await NotificationService.areNotificationsAvailable();
    if (!available) {
      setPermissionStatus('unavailable');
      return;
    }

    const { status } = await NotificationService.checkPermissions();
    setPermissionStatus(status);
  };

  const handleRequestPermission = async () => {
    const { status } = await NotificationService.requestPermissionsAsync();
    setPermissionStatus(status);

    if (status === 'granted') {
      onClose(true); // Permission granted
    }
  };

  const openSettings = () => {
    Linking.openSettings();
  };

  return (
    <Modal
      visible={visible}
      transparent={true}
      animationType="fade"
    >
      <View style={styles.modalOverlay}>
        <View style={[styles.modalContent, { backgroundColor: theme.card }]}>
          <View style={styles.iconContainer}>
            <View style={[styles.iconCircle, { backgroundColor: theme.primaryLight }]}>
              <Ionicons name="notifications" size={40} color={theme.primary} />
            </View>
          </View>

          <Text style={[styles.title, { color: theme.text }]}>
            {permissionStatus === 'denied'
              ? 'Notifications are disabled'
              : 'Allow Notifications'}
          </Text>

          <Text style={[styles.description, { color: theme.textSecondary }]}>
            {permissionStatus === 'denied'
              ? 'To receive reminders about your tasks, exams, and study sessions, please enable notifications in your device settings.'
              : 'Get timely reminders about your upcoming tasks, study sessions, and achievements to stay on track with your study goals.'}
          </Text>

          <View style={styles.benefitsList}>
            <View style={styles.benefitItem}>
              <Ionicons name="checkmark-circle" size={22} color={theme.primary} />
              <Text style={[styles.benefitText, { color: theme.text }]}>Task due date reminders</Text>
            </View>
            <View style={styles.benefitItem}>
              <Ionicons name="checkmark-circle" size={22} color={theme.primary} />
              <Text style={[styles.benefitText, { color: theme.text }]}>Study session completions</Text>
            </View>
            <View style={styles.benefitItem}>
              <Ionicons name="checkmark-circle" size={22} color={theme.primary} />
              <Text style={[styles.benefitText, { color: theme.text }]}>Streak maintenance alerts</Text>
            </View>
          </View>

          {permissionStatus === 'denied' ? (
            <TouchableOpacity
              style={[styles.primaryButton, { backgroundColor: theme.primary }]}
              onPress={openSettings}
            >
              <Text style={styles.primaryButtonText}>Open Settings</Text>
            </TouchableOpacity>
          ) : (
            <TouchableOpacity
              style={[styles.primaryButton, { backgroundColor: theme.primary }]}
              onPress={handleRequestPermission}
            >
              <Text style={styles.primaryButtonText}>Allow Notifications</Text>
            </TouchableOpacity>
          )}

          <TouchableOpacity
            style={[styles.secondaryButton, { borderColor: theme.border }]}
            onPress={() => onClose(false)}
          >
            <Text style={[styles.secondaryButtonText, { color: theme.textSecondary }]}>
              {permissionStatus === 'denied' ? "Skip for Now" : "Not Now"}
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </Modal>
  );
};

const styles = StyleSheet.create({
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  modalContent: {
    width: '100%',
    borderRadius: 12,
    padding: 20,
    alignItems: 'center',
  },
  iconContainer: {
    marginBottom: 20,
  },
  iconCircle: {
    width: 80,
    height: 80,
    borderRadius: 40,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 12,
    textAlign: 'center',
  },
  description: {
    fontSize: 16,
    lineHeight: 22,
    marginBottom: 20,
    textAlign: 'center',
  },
  benefitsList: {
    width: '100%',
    marginBottom: 24,
  },
  benefitItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  benefitText: {
    fontSize: 16,
    marginLeft: 10,
  },
  primaryButton: {
    width: '100%',
    borderRadius: 8,
    paddingVertical: 14,
    alignItems: 'center',
    marginBottom: 12,
  },
  primaryButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  secondaryButton: {
    width: '100%',
    borderRadius: 8,
    paddingVertical: 14,
    alignItems: 'center',
    borderWidth: 1,
  },
  secondaryButtonText: {
    fontSize: 16,
  },
});

export default NotificationPermissionDialog;
